@model ChillScrabble.Models.Game

@{
    var colors = new Dictionary<int, string>
    {
        [PlayBoard.Mid] = "#EFEFEF",
        [PlayBoard.Mpt] = "#264158", 
        [PlayBoard.Lx2] = "#91AF97", 
        [PlayBoard.Lx3] = "#FEDCA0", 
        [PlayBoard.Wx2] = "#909EA9", 
        [PlayBoard.Wx3] = "#D1401E" 
    };

    var header = new Dictionary<int, List<string>>
    {
        [Game.OnlM] = ["header_online.png", "Online mode"],
        [Game.OffM] = ["header_offline.png", "Chill offline"],
        [Game.BotM] = ["header_bot.png", "With bot"]
    };
    
    ViewData["Title"] = header[Model.Mode][1];
    ViewData["BodyClass"] = "main-background";
}


<main style="height: 90vh; " class="container container-vertical">
    <input type="hidden" id="gameId" value="@Context.Request.Cookies["GameId"]" />
    
    <header style="height: 10vh; background-image: url('/images/Game/@header[Model.Mode][0]')">
        <button style="height: 7vh; width: 7vh; background-color: transparent; background-image: url('/images/Shared/back_button.svg'); "
                onclick="window.location.href='/'"></button>
        <h3>@header[Model.Mode][1].ToUpper()</h3>
        <button style="height: 7vh; width: 7vh; background-color: transparent; background-image: url('/images/Game/menu_button.svg'); "
                onclick="window.location.href='/'"></button>
    </header>

    <div style="height: 80vh" class="container container-horizontal">
        <div style="width: 10vh;" class="container container-vertical left-panel">
            <button class="ready-button" style="height: 23vh;" id="ready-button">
                <p>R<br/>E<br/>A<br/>D<br/>Y</p>
            </button>
            <div class="bonus"></div>
            <div class="bonus"></div>
            <div class="bonus"></div>
        </div>

        <div style="width: 80vh;" class="game-board">
            <div class="board-grid">
                @for (int i = 0; i < PlayBoard.Size; ++i)
                {
                    for (int j = 0; j < PlayBoard.Size; ++j)
                    {
                        var bonus = PlayBoard.Bonuses[i, j];
                        <div class="board-cell"
                             style="background-color: @colors[bonus];"
                             data-row="@i"
                             data-col="@j">
                        </div>
                    }
                }
            </div>
        </div>

        <div class="container container-vertical">
            @{
                int playerIndex = 0; // Переменная для нумерации игроков
            }
            @foreach (var player in Model.Players)
            {
                <div class="player-info">
                    <div class="container container-horizontal">
                        <img style="height: 17vh;" src="/images/Game/player_img.png">
                        <div>
                            <h3>@player.Name</h3>
                            <p><strong style="font-size: 7vh; -webkit-text-stroke: 0.01vh black;">@player.Score</strong> POINTS</p>
                        </div>
                    </div>

                    <div class="player-slots">
                        @for (int i = 0; i < 14; ++i)
                        {
                            <div class="slot empty-slot" data-player="@playerIndex"></div>
                        }
                    </div>
                </div>
                ++playerIndex;
            }
        </div>
    </div>

    <script src="/js/Game.js"></script>
</main>


