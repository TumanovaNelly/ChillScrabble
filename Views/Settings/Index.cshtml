@{
    ViewData["Title"] = "Chill Scrabble";
    ViewData["BodyClass"] = "main-background";
}


<main style="height: 90vh; " class="container container-vertical">
    <header style="height: 10vh; padding-right: 1vh; background-image: url('/images/Settings/header.png')">
        <button
            style="height: 7vh; width: 7vh; background-color: transparent; background-image: url('/images/Shared/back_button.svg'); "
            onclick="window.location.href='/'"></button>
        <h3>SETTINGS</h3>
        <img src="/images/Settings/gears.svg" width="85" height="85">
    </header>

    <div style="justify-content: center; padding-top: 2vh;" class="container container-vertical">
        <!-- LANGUAGES Section with Flags -->
        
        <div class="container container-horizontal setting" style="height: 10vh; position: relative">
            <p>LANGUAGES</p>
            <div style="display: flex; gap: 4vh; position: absolute; right: 4vh; top: 50%; transform: translateY(-50%);">
                
                <!-- Russian Option -->
                <div style="display: flex; justify-content: space-between; align-items: center; width: 100%; padding: 1.5vh 2vh;">
                    <div style="display: flex; align-items: center; gap: 3vh; margin-right: 1vh;">
                        <p>RUS</p>
                        <img src="/images/Settings/Russia.svg" width="40" height="40">
                    </div>
                    <label class="modern-radio-large">
                        <input type="radio" name="language">
                        <span class="radio-checkmark"></span>
                    </label>
                </div>
                <!-- English Option -->
                <div style="display: flex; justify-content: space-between; align-items: center; width: 100%; padding: 1.5vh 2vh;">
                    <div style="display: flex; align-items: center; gap: 3vh; margin-right: 1vh;">
                        <p>ENG</p>
                        <img src="/images/Settings/United_Kingdom.svg" width="40" height="40">
                    </div>
                    <label class="modern-radio-large">
                        <input type="radio" name="language" checked>
                        <span class="radio-checkmark"></span>
                    </label>
                </div>

            </div>
        </div>
    </div>

    <div class="container container-horizontal">

        <!-- Music Player Block -->
        <div class="setting" style="
    height: 10vh;
    width: 60vh;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 2vh;
">
            <!-- Title -->
            <p>MUSIC</p>

            <!-- Track Controls -->
            <div style="display: flex; align-items: center; gap: 2vh;">
                <button class="track-btn" onclick="changeTrack(-1)">←</button>

                <div class="track-info">
                    <div class="track-title" style="
                font-size: 2.2vh;
                font-weight: bold;
                color: white;
            ">Loading...</div>
                    <div class="track-artist" style="
                font-size: 1.8vh;
                color: #EB9F8F;
            "></div>
                </div>

                <button class="track-btn" onclick="changeTrack(1)">→</button>
            </div>
        </div>
        <!-- Audio Element (hidden) -->
        <audio id="game-audio" loop></audio>

        <script>
            // Music Library
            const musicLibrary = [
                {
                    title: "Chill Vibes",
                    artist: "Reduction Studio",
                    url: "audio/chill-vibes.mp3"
                },
                {
                    title: "Lofi Dreams",
                    artist: "Beat Collective",
                    url: "audio/lofi-dreams.mp3"
                },
                {
                    title: "Game Theme",
                    artist: "Soundscapes",
                    url: "audio/game-theme.mp3"
                }
            ];

            // Player Variables
            let currentTrackIndex = 0;
            const audioPlayer = document.getElementById('game-audio');
            const volumeSlider = document.querySelector('.volume-slider');
            const volumePercent = document.querySelector('.volume-percent');

            // Initialize Player
            function initMusicPlayer() {
                // Load first track
                loadTrack(currentTrackIndex);

                // Set up volume control
                volumeSlider.addEventListener('input', function() {
                    const volume = this.value / 100;
                    audioPlayer.volume = volume;
                    volumePercent.textContent = `${this.value}%`;
                });

                // Set initial volume
                audioPlayer.volume = volumeSlider.value / 100;
            }

            // Load Track
            function loadTrack(index) {
                const track = musicLibrary[index];
                audioPlayer.src = track.url;

                document.querySelector('.track-title').textContent = track.title;
                document.querySelector('.track-artist').textContent = track.artist;

                // Auto-play if music is enabled
                audioPlayer.play().catch(e => console.log("Auto-play prevented:", e));
            }

            // Change Track
            function changeTrack(direction) {
                currentTrackIndex += direction;

                // Loop around if at ends
                if (currentTrackIndex >= musicLibrary.length) currentTrackIndex = 0;
                if (currentTrackIndex < 0) currentTrackIndex = musicLibrary.length - 1;

                loadTrack(currentTrackIndex);
            }

            // Start player when page loads
            window.addEventListener('DOMContentLoaded', initMusicPlayer);
        </script>
        
        <!-- Volume Block -->
        <div class="setting" style="height: 10vh; width: 60vh; display: flex; align-items: center; justify-content: space-between; padding: 0 2vh;">
            <p>VOLUME</p>
            <div style="display: flex; align-items: center; gap: 2vh;">
                <input
                    type="range"
                    min="0"
                    max="100"
                    value="70"
                    class="volume-slider"
                    style="width: 30vh;"
                >
                <p class="volume-percent" style="color: var(--pink);">70%</p>
            </div>
        </div>
    </div>
    <script>
        
        document.addEventListener('DOMContentLoaded', () => {
            const volumeSlider = document.querySelector('.volume-slider');
            const volumePercent = document.querySelector('.volume-percent');

            if (volumeSlider && volumePercent) {
                volumeSlider.addEventListener('input', function() {
                    volumePercent.textContent = `${this.value}%`;
                    // Здесь можно добавить изменение громкости аудио
                    console.log(`Громкость изменена: ${this.value}%`);
                });
            } else {
                console.error('Элементы не найдены! Проверьте селекторы.');
            }
        });
    </script>


    <div class="container container-horizontal">
            <button class="setting"
                    style="height: 10vh; width: 65vh; margin-top: 12vh; transform: rotate(20deg); 
                    justify-content: center; "
                    onclick="window.location.href='/Rules'">
                <p>BREAK THE <span class="strikethrough">GAME</span> <span style="color: #EB9F8F; ">RULES</span></p>            
            </button>
        </div>
    

</main>

<img class="chill-guy" src="/images/Shared/chill_guy.png"/>


